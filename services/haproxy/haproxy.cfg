global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    daemon

defaults
    log global
    mode tcp
    option tcplog
    timeout connect 5s
    timeout client 30s
    timeout server 30s

frontend http_frontend
    bind *:80
    mode tcp

    # Use ACLs for HTTP routing based on Host header
    acl hl_domain_http hdr(host) -m end .hl.kuipr.de
    acl k8s_domain_http hdr(host) -m end .k8s.kuipr.de

    use_backend hl_backend_http if hl_domain_http
    use_backend k8s_backend_http if k8s_domain_http

    # Default to Traefik for all other domains
    default_backend http_backend

frontend https_frontend
    bind *:443
    mode tcp
    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }

    # ACL to match domains
    acl k8s_domain req.ssl_sni -m end .k8s.kuipr.de
    acl hl_domain req.ssl_sni -m end .hl.kuipr.de

    # Use backends based on domain
    use_backend k8s_backend if k8s_domain
    use_backend hl_backend if hl_domain

    # Default to Traefik for all other domains
    default_backend traefik_backend_https

backend hl_backend_http
    mode tcp
    server hl_server_http 192.168.1.69:80 check

backend k8s_backend_http
    mode tcp
    server k8s_server_http 192.168.1.200:80 check

backend http_backend
    mode tcp
    balance roundrobin
    # Route HTTP traffic to Traefik
    server traefik_http 127.0.0.1:8080 check

backend hl_backend
    mode tcp
    server hl_server 192.168.1.69:443 check

backend k8s_backend
    mode tcp
    server k8s_server 192.168.1.200:443 check

backend traefik_backend_https
    mode tcp
    server traefik_server 127.0.0.1:8443 check
