global
    log /dev/log local0
    log /dev/log local1 notice
    # chroot /var/lib/haproxy
    user haproxy
    group haproxy
    daemon

defaults
    log global
    mode tcp
    option tcplog
    timeout connect 5s
    timeout client 30s
    timeout server 30s

frontend http_frontend
    bind *:80
    mode tcp

    # Use ACLs for HTTP routing based on Host header
    acl hl_domain_http hdr(host) -m end .hl.kuipr.de
    acl k8s_domain_http hdr(host) -m end .k8s.kuipr.de

    # Route all domains through Anubis with specific target backends
    use_backend anubis_hl_backend_http if hl_domain_http
    use_backend anubis_k8s_backend_http if k8s_domain_http

    # Default Anubis backend for all other domains
    default_backend anubis_backend_http

frontend https_frontend
    bind *:443
    mode tcp
    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }

    # ACL to match domains
    acl k8s_domain req.ssl_sni -m end .k8s.kuipr.de
    acl hl_domain req.ssl_sni -m end .hl.kuipr.de

    # Route all domains through Anubis with specific target backends
    use_backend anubis_k8s_backend_https if k8s_domain
    use_backend anubis_hl_backend_https if hl_domain

    # Default Anubis backend for all other domains
    default_backend anubis_backend_https

# Original backends for reference
backend hl_backend_http
    mode tcp
    server hl_server_http 192.168.1.69:80 check

backend k8s_backend_http
    mode tcp
    server k8s_server_http 192.168.1.200:80 check

# Anubis backends for HTTP traffic
backend anubis_backend_http
    mode tcp
    # Default Anubis - target is set to Traefik in the container
    server anubis_http 127.0.0.1:8923 check

backend anubis_hl_backend_http
    mode tcp
    # Anubis instance specifically for HL domain (HTTP)
    server anubis_hl_http 127.0.0.1:8924 check

backend anubis_k8s_backend_http
    mode tcp
    # Anubis instance specifically for K8S domain (HTTP)
    server anubis_k8s_http 127.0.0.1:8925 check

# Original HTTPS backends for reference
backend hl_backend
    mode tcp
    server hl_server 192.168.1.69:443 check

backend k8s_backend
    mode tcp
    server k8s_server 192.168.1.200:443 check

# Anubis backends for HTTPS traffic
backend anubis_backend_https
    mode tcp
    # Default Anubis - target is set to Traefik in the container
    server anubis_https 127.0.0.1:8923 check

backend anubis_hl_backend_https
    mode tcp
    # Anubis instance specifically for HL domain (HTTPS)
    server anubis_hl_https 127.0.0.1:8924 check

backend anubis_k8s_backend_https
    mode tcp
    # Anubis instance specifically for K8S domain (HTTPS)
    server anubis_k8s_https 127.0.0.1:8925 check

# Keep the original Traefik backend for reference, but it's not used by default anymore
backend traefik_backend_https
    mode tcp
    server traefik_server 127.0.0.1:8443 check

# Added for HTTP traffic originally going to Traefik
backend http_backend
    mode tcp
    balance roundrobin
    server traefik_http 127.0.0.1:8080 check
